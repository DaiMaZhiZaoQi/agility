<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hunt.dao.SysTaskMapper">
  <resultMap id="baseResultMap" type="com.hunt.model.entity.SysTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="task_number" jdbcType="VARCHAR" property="taskNumber" />
    <result column="task_group_id" jdbcType="BIGINT" property="taskGroupId" />
    <result column="task_user_id" jdbcType="BIGINT" property="taskUserId" />
    <result column="task_user_name" jdbcType="VARCHAR" property="taskUserName" />
    <result column="task_count" jdbcType="BIGINT" property="taskCount"/> 
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <resultMap extends="baseResultMap" id="resultMapWithBLOBs" type="com.hunt.model.entity.SysTaskWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    <result column="task_msg" jdbcType="LONGVARCHAR" property="taskMsg" />
    <result column="task_time_chain" jdbcType="LONGVARCHAR" property="taskTimeChain" />
  </resultMap>
  <sql id="base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    id, task_name, task_number, task_group_id, task_user_id, task_user_name, create_time, 
    update_time, status
  </sql>
  <sql id="blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    task_msg, task_time_chain
  </sql>
  
  <select id="selectById" resultType="SysTask">
  	select * from sys_task
  </select>
  
  <!-- 查询任务列表 -->
  <select id="selectSysTask"  resultMap="resultMapWithBLOBs">
	  	SELECT sys_task.* FROM sys_task 
		LEFT JOIN sys_task_user ON sys_task_user.`sys_task_group`=sys_task.`task_group_id` 
		<choose>
			<when test="pageDto.selectStatus==null or pageDto.selectStatus==0">
				WHERE sys_task.`status`=#{pageDto.others} 
				<if test="pageDto.others!=-1">			<!-- 未分派的不用userId查  -->
					AND sys_task.`task_user_id`=#{pageDto.userId}
				</if>
			</when>
			<when test="pageDto.selectStatus==1">
				WHERE <![CDATA[sys_task.`status`<=#{pageDto.others}]]>    
				AND (sys_task.`task_user_id` IS NULL OR sys_task.`task_user_id`=#{pageDto.userId})<!-- 没授权或者该任务已授权   查询当前点击的用户id-->
			</when>
			<when test="pageDto.selectStatus==2">
				WHERE <![CDATA[sys_task.`status`>=#{pageDto.others}]]> 
				<if test="isAuth==0">
					AND sys_task.`task_user_id`=#{pageDto.userId}
				</if>
			</when>
			<when test="pageDto.selectStatus==3">		<!-- 已完成  -->
				WHERE <![CDATA[sys_task.`status`=#{pageDto.others}]]> 
				<if test="isAuth==0">
					AND sys_task.`task_user_id`=#{pageDto.userId}
				</if>
			</when>
			<when test="pageDto.selectStatus==4">		<!-- 未完成(0:未开始，1:正在进行) -->
				WHERE <![CDATA[(sys_task.`status`=0 OR sys_task.`status`=1)]]> 
				<if test="isAuth==0">
					AND sys_task.`task_user_id`=#{pageDto.userId}
				</if>
			</when>
		</choose>
		AND sys_task_user.`sys_task_group`=#{pageDto.id}
		AND sys_task_user.`sys_user_id`=#{pageDto.userId}
		AND sys_task_user.`status`=1 
		
		ORDER BY sys_task.`${pageDto.sort}` ${pageDto.order} limit ${(pageDto.page-1)*pageDto.rows},${pageDto.rows}
  </select>
  
  <!-- 查询任务列表 -->
  <select id="selectCountSysTask"  resultType="java.lang.Integer">
  		SELECT count(*) FROM (
  			SELECT sys_task.id FROM sys_task  
				LEFT JOIN sys_task_user ON sys_task_user.`sys_task_group`=sys_task.`task_group_id` 
			<choose>
				<when test="pageDto.selectStatus==null or pageDto.selectStatus==0">
					WHERE sys_task.`status`=#{pageDto.others} 
					<if test="pageDto.others!=-1">			<!-- 未分配的不用userId查  -->
						AND sys_task.`task_user_id`=#{pageDto.userId}
					</if>
				</when>
				<when test="pageDto.selectStatus==1">
					WHERE <![CDATA[sys_task.`status`<=#{pageDto.others}]]>    
					AND (sys_task.`task_user_id` IS NULL OR sys_task.`task_user_id`=#{pageDto.userId})<!-- 没授权或者该任务已授权   查询当前点击的用户id-->
				</when>
				<when test="pageDto.selectStatus==2">
					WHERE <![CDATA[sys_task.`status`>=#{pageDto.others}]]> 
					<if test="isAuth==0">
						AND sys_task.`task_user_id`=#{pageDto.userId}
					</if>
				</when>
				<when test="pageDto.selectStatus==3">		<!-- 已完成  -->
					WHERE <![CDATA[sys_task.`status`=#{pageDto.others}]]> 
					<if test="isAuth==0">
						AND sys_task.`task_user_id`=#{pageDto.userId}
					</if>
				</when>
				<when test="pageDto.selectStatus==4">		<!-- 未完成(0:未开始，1:正在进行) -->
					WHERE <![CDATA[(sys_task.`status`=0 OR sys_task.`status`=1)]]> 
					<if test="isAuth==0">
						AND sys_task.`task_user_id`=#{pageDto.userId}
					</if>
				</when>
			</choose>
			AND sys_task_user.`sys_task_group`=#{pageDto.id}
			AND sys_task_user.`sys_user_id`=#{pageDto.userId}
			AND sys_task_user.`status`=1 
  		) temp
	  
  </select>
  
  
  <!-- AND sys_task.`task_group_id`=#{id} -->
  
  <!-- 查询未分派的任务 -->
  <select id="selectUnDisPatch" resultMap="resultMapWithBLOBs">
  	SELECT sys_task.* FROM sys_task
	LEFT JOIN sys_task_user ON sys_task_user.`sys_task_group`=sys_task.`task_group_id`
	WHERE sys_task_user.`sys_user_id`=#{userId}
	AND sys_task_user.`sys_task_group`=#{groupId}
	AND sys_task_user.`status`=1
	AND sys_task.`status`=#{status}
  </select>
  
  <!-- 查询任务列表 -->
  <select id="selectDialogSysTask" parameterType="com.hunt.model.dto.PageDto" resultMap="resultMapWithBLOBs">
	  	SELECT sys_task.* FROM sys_task 
		LEFT JOIN sys_task_user ON sys_task_user.`sys_task_group`=sys_task.`task_group_id` 
		<choose>
			<when test="selectStatus==null or selectStatus==0">
				WHERE sys_task.`status`=#{others} 
			</when>
			<when test="selectStatus==1">		<!-- 查询包含已分派的任务，包含未分派的  -->
				WHERE <![CDATA[sys_task.`status`<=#{others}]]>    
				AND (sys_task.`task_user_id` IS NULL OR sys_task.`task_user_id`=#{curUserId})<!-- 没授权或者该任务已授权   查询当前点击的用户id-->
			</when>
			<when test="selectStatus==2">		<!-- 查询已分派的  -->
				WHERE <![CDATA[sys_task.`status`>=#{others}]]> 
			</when>
		</choose>
		AND sys_task_user.`sys_task_group`=#{id}
		AND sys_task_user.`sys_user_id`=#{userId}
		AND sys_task_user.`status`=1 
		AND sys_task.`task_group_id`=#{id}
		ORDER BY sys_task.`${sort}` ${order} limit ${(page-1)*rows},${rows}
  </select>
  
  
  
  
  <select id="selectTaskNumByGroupId" resultType="java.lang.String">
  	SELECT sys_task.task_number FROM sys_task WHERE sys_task.`task_group_id`=#{groupId} AND sys_task.`status`!=4
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="resultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    select 
    <include refid="base_Column_List" />
    ,
    <include refid="blob_Column_List" />
    from sys_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    delete from sys_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hunt.model.entity.SysTaskWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    insert into sys_task (id, task_name, task_number, 
      task_group_id, task_user_id, task_user_name, 
      create_time, update_time, status, 
      task_msg, task_time_chain)
    values (#{id,jdbcType=BIGINT}, #{taskName,jdbcType=VARCHAR}, #{taskNumber,jdbcType=VARCHAR}, 
      #{taskGroupId,jdbcType=BIGINT}, #{taskUserId,jdbcType=BIGINT}, #{taskUserName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{taskMsg,jdbcType=LONGVARCHAR}, #{taskTimeChain,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hunt.model.entity.SysTaskWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    insert into sys_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="taskNumber != null">
        task_number,
      </if>
      <if test="taskGroupId != null">
        task_group_id,
      </if>
      <if test="taskUserId != null">
        task_user_id,
      </if>
      <if test="taskUserName != null">
        task_user_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="taskMsg != null">
        task_msg,
      </if>
      <if test="taskTimeChain != null">
        task_time_chain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskNumber != null">
        #{taskNumber,jdbcType=VARCHAR},
      </if>
      <if test="taskGroupId != null">
        #{taskGroupId,jdbcType=BIGINT},
      </if>
      <if test="taskUserId != null">
        #{taskUserId,jdbcType=BIGINT},
      </if>
      <if test="taskUserName != null">
        #{taskUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="taskMsg != null">
        #{taskMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="taskTimeChain != null">
        #{taskTimeChain,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <insert id="insertBatch" parameterType="java.lang.Long" useGeneratedKeys="false">
  	 insert into sys_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
        task_name, task_number,task_msg,task_group_id,task_user_id, task_user_name,task_time_chain
      <!-- <if test="taskName!= null">
     	 task_name
      </if>
      <if test="taskNumber != null">
        task_number,
      </if>
      <if test="taskGroupId != null">
        task_group_id,
      </if>
      <if test="taskUserId != null">
        task_user_id,
      </if>
      <if test="taskUserName != null">
        task_user_name,
      </if>
      <if test="taskMsg != null">
        task_msg,
      </if>
      <if test="taskTimeChain != null">
        task_time_chain,
      </if> -->
    </trim>
    values
    <foreach collection="listTask"  item="item" index="index" separator=",">
    	(
	    	#{item.taskName},
	    	#{item.taskNumber},
	    	#{item.taskMsg},
	    	#{groupId},
	    	#{item.taskUserId},
	    	#{item.taskUserName},
	    	#{item.taskTimeChain}
	    )
    </foreach>
    
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hunt.model.entity.SysTaskWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    update sys_task
    <set>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskNumber != null">
        task_number = #{taskNumber,jdbcType=VARCHAR},
      </if>
      <if test="taskGroupId != null">
        task_group_id = #{taskGroupId,jdbcType=BIGINT},
      </if>
      <if test="taskUserId != null">
        task_user_id = #{taskUserId,jdbcType=BIGINT},
      </if>
      <if test="taskUserName != null">
        task_user_name = #{taskUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="taskMsg != null">
        task_msg = #{taskMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="taskTimeChain != null">
        task_time_chain = #{taskTimeChain,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <update id="updateByCallNum" keyProperty="id" useGeneratedKeys="true">
  	UPDATE sys_task
	SET sys_task.`task_count`=sys_task.`task_count`+1,
	sys_task.`status`=IF(sys_task.`status`=0,1,sys_task.`status`)
	WHERE sys_task.`task_number`=#{taskNumber} AND sys_task.`task_user_id`=#{userId} 
	AND (sys_task.`status`!=-1 OR sys_task.`status`!=4)
  </update>
  

  
  
  <update id="updateSysTaskListTaskId" useGeneratedKeys="true" keyProperty="id">
  	UPDATE sys_task SET 
  	sys_task.`task_user_id`=#{user.id},
  	sys_task.`task_user_name`=#{user.zhName},
  	sys_task.`status`=#{user.status} WHERE sys_task.`id` IN
  	<foreach collection="listTaskId" open="(" close=")" separator="," item="item">
  		#{item}
  	</foreach>
  </update>
  
  <!-- 删除任务组  -->
  <update id="deleteByTaskGroupId" useGeneratedKeys="true" keyProperty="id">
  	UPDATE sys_task
  	<set>
  		<if test="sysTask.status!=null">
	  		status=#{sysTask.status}
  		</if>
  	</set>
  	<where>
  		task_group_id=#{sysTask.taskGroupId}
  	</where>
  </update>
  
  
  <update id="updateByTaskNum" useGeneratedKeys="true" keyProperty="id">
  	update sys_task 
  	set status=#{status} 
  	where task_number IN
  	<foreach collection="listNumber" item="item" open="(" close=")" separator=",">
	  	#{item}
  	</foreach>
  	AND
  	task_group_id=#{taskGroupId}
  </update>
  
  
  <delete id="deleteByTaskNum">
  	DELETE FROM sys_task 
  	where task_number IN
  	<foreach collection="listNumber" item="item" open="(" close=")" separator=",">
	  	#{item}
  	</foreach>
  	AND
  	task_group_id=#{taskGroupId}
  </delete>
  
  <update id="updateSysTaskByTaskNumber" useGeneratedKeys="true" keyProperty="id">
  	update sys_task
  	set task_name=CASE task_number
  	<foreach collection="listSysTask" item="item" index="index">
  		WHEN #{item.taskNumber} THEN #{item.taskName}
  	</foreach>
  	END,
  	task_msg=CASE task_number
  	<foreach collection="listSysTask" item="item" index="index">
  		WHEN #{item.taskNumber} THEN #{item.taskMsg}
  	</foreach>
  	END
  	<where>
  		task_number IN
  		<foreach collection="listSysTask" item="item" index="index" separator="," open="(" close=")">
  			#{item.taskNumber}
  		</foreach>
  	</where>
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hunt.model.entity.SysTaskWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    update sys_task
    set task_name = #{taskName,jdbcType=VARCHAR},
      task_number = #{taskNumber,jdbcType=VARCHAR},
      task_group_id = #{taskGroupId,jdbcType=BIGINT},
      task_user_id = #{taskUserId,jdbcType=BIGINT},
      task_user_name = #{taskUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      task_msg = #{taskMsg,jdbcType=LONGVARCHAR},
      task_time_chain = #{taskTimeChain,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hunt.model.entity.SysTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 11 12:04:21 CST 2020.
    -->
    update sys_task
    set task_name = #{taskName,jdbcType=VARCHAR},
      task_number = #{taskNumber,jdbcType=VARCHAR},
      task_group_id = #{taskGroupId,jdbcType=BIGINT},
      task_user_id = #{taskUserId,jdbcType=BIGINT},
      task_user_name = #{taskUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>