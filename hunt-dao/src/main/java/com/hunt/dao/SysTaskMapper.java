package com.hunt.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.hunt.model.dto.PageDto;
import com.hunt.model.entity.SysTask;
import com.hunt.model.entity.SysTaskWithBLOBs;
import com.hunt.model.entity.SysUser;

public interface SysTaskMapper {
	
	SysTask selectById();
	
	/**
	 * 查询任务列表(未授权，已授权的userId参数必传)
	 * @param pageDto
	 * @return
	 */
	List<SysTaskWithBLOBs> selectSysTask(@Param("pageDto")PageDto pageDto,@Param("isAuth")Integer isAuth);
	
	/**
	 * 查询任务数量
	 * @param pageDto
	 * @return
	 */
	Integer selectCountSysTask(@Param("pageDto")PageDto pageDto,@Param("isAuth")Integer isAuth);
	
	List<SysTaskWithBLOBs> selectUnDisPatch(@Param("userId")Long userId,@Param("groupId")Long groupId,@Param("status")Integer status);
	
	/**
	 * 查血当前点击的userId
	 * @param pageDto
	 * @return
	 */
	List<SysTaskWithBLOBs> selectDialogSysTask(PageDto pageDto);
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    int insert(SysTaskWithBLOBs record);
    
    /**
     * 批量添加
     * @param listTask
     * @param taskGroupId
     * @return
     */
    Long insertBatch(@Param("listTask")List<SysTaskWithBLOBs> listTask,@Param("groupId")Long groupId); 

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    int insertSelective(SysTaskWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    SysTaskWithBLOBs selectByPrimaryKey(Long id);
    
    /**
     * 查询电话号码
     * @param groupId
     * @return
     */
    List<String> selectTaskNumByGroupId(Long groupId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    int updateByPrimaryKeySelective(SysTaskWithBLOBs record);
    
    /**
     * 删除任务
     * @param record
     * @return
     */
    int deleteByTaskGroupId(@Param("sysTask")SysTaskWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    int updateByPrimaryKeyWithBLOBs(SysTaskWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_task
     *
     * @mbg.generated Tue Feb 11 11:53:17 CST 2020
     */
    int updateByPrimaryKey(SysTask record);
    
    
    Long updateByCallNum(@Param("taskNumber") String taskNumber,@Param("userId")String userId);
    
    
    /**
     * 更新任务授权
     * @param sysUser
     * @param listTaskId
     * @return
     */
    int updateSysTaskListTaskId(@Param("user")SysUser sysUser,@Param("listTaskId")List<String> listTaskId);
    
    
    /**
     * 更新状态
     * @param listNumber
     * @param status
     * @return
     */
    Long updateByTaskNum(@Param("listNumber")List<String> listNumber,@Param("status")Integer status,@Param("taskGroupId")Long taskGroupId);
    
    /**
     * 删除任务
     * @param listNumber
     * @param taskGroupId
     * @return
     */
    Long deleteByTaskNum(@Param("listNumber")List<String> listNumber,@Param("taskGroupId")Long taskGroupId);
    
    /**
     * 更新SysTask
     * @param listSysTask
     * @return
     */
    Long updateSysTaskByTaskNumber(@Param("listSysTask")List<SysTaskWithBLOBs> listSysTask);
}